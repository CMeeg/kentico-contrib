//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.KenticoContrib;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(TwitterMetadata.CLASS_NAME, typeof(TwitterMetadata))]

namespace CMS.DocumentEngine.Types.KenticoContrib
{
	/// <summary>
	/// Represents a content item of type TwitterMetadata.
	/// </summary>
	public partial class TwitterMetadata : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "KenticoContrib.TwitterMetadata";


		/// <summary>
		/// The instance of the class that provides extended API for working with TwitterMetadata fields.
		/// </summary>
		private readonly TwitterMetadataFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// TwitterMetadataID.
		/// </summary>
		[DatabaseIDField]
		public int TwitterMetadataID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("TwitterMetadataID"), 0);
			}
			set
			{
				SetValue("TwitterMetadataID", value);
			}
		}


		/// <summary>
		/// If this is left blank, the current page's page title will be used.
		/// </summary>
		[DatabaseField]
		public string TwitterMetadataTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TwitterMetadataTitle"), @"");
			}
			set
			{
				SetValue("TwitterMetadataTitle", value);
			}
		}


		/// <summary>
		/// If this is left blank, the current page's page description will be used.
		/// </summary>
		[DatabaseField]
		public string TwitterMetadataDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TwitterMetadataDescription"), @"");
			}
			set
			{
				SetValue("TwitterMetadataDescription", value);
			}
		}


		/// <summary>
		/// Card.
		/// </summary>
		[DatabaseField]
		public string TwitterMetadataCard
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TwitterMetadataCard"), @"summary");
			}
			set
			{
				SetValue("TwitterMetadataCard", value);
			}
		}


		/// <summary>
		/// @username for this website.
		/// </summary>
		[DatabaseField]
		public string TwitterMetadataSite
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TwitterMetadataSite"), @"");
			}
			set
			{
				SetValue("TwitterMetadataSite", value);
			}
		}


		/// <summary>
		/// If this is left blank, the current page's URL will be used.
		/// </summary>
		[DatabaseField]
		public string TwitterMetadataUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TwitterMetadataUrl"), @"");
			}
			set
			{
				SetValue("TwitterMetadataUrl", value);
			}
		}


		/// <summary>
		/// Image.
		/// </summary>
		[DatabaseField]
		public string TwitterMetadataImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TwitterMetadataImage"), @"");
			}
			set
			{
				SetValue("TwitterMetadataImage", value);
			}
		}


		/// <summary>
		/// Image alt text.
		/// </summary>
		[DatabaseField]
		public string TwitterMetadataImageAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TwitterMetadataImageAltText"), @"");
			}
			set
			{
				SetValue("TwitterMetadataImageAltText", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with TwitterMetadata fields.
		/// </summary>
		[RegisterProperty]
		public TwitterMetadataFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with TwitterMetadata fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class TwitterMetadataFields : AbstractHierarchicalObject<TwitterMetadataFields>
		{
			/// <summary>
			/// The content item of type TwitterMetadata that is a target of the extended API.
			/// </summary>
			private readonly TwitterMetadata mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="TwitterMetadataFields" /> class with the specified content item of type TwitterMetadata.
			/// </summary>
			/// <param name="instance">The content item of type TwitterMetadata that is a target of the extended API.</param>
			public TwitterMetadataFields(TwitterMetadata instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// TwitterMetadataID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.TwitterMetadataID;
				}
				set
				{
					mInstance.TwitterMetadataID = value;
				}
			}


			/// <summary>
			/// If this is left blank, the current page's page title will be used.
			/// </summary>
			public string Title
			{
				get
				{
					return mInstance.TwitterMetadataTitle;
				}
				set
				{
					mInstance.TwitterMetadataTitle = value;
				}
			}


			/// <summary>
			/// If this is left blank, the current page's page description will be used.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.TwitterMetadataDescription;
				}
				set
				{
					mInstance.TwitterMetadataDescription = value;
				}
			}


			/// <summary>
			/// Card.
			/// </summary>
			public string Card
			{
				get
				{
					return mInstance.TwitterMetadataCard;
				}
				set
				{
					mInstance.TwitterMetadataCard = value;
				}
			}


			/// <summary>
			/// @username for this website.
			/// </summary>
			public string Site
			{
				get
				{
					return mInstance.TwitterMetadataSite;
				}
				set
				{
					mInstance.TwitterMetadataSite = value;
				}
			}


			/// <summary>
			/// If this is left blank, the current page's URL will be used.
			/// </summary>
			public string Url
			{
				get
				{
					return mInstance.TwitterMetadataUrl;
				}
				set
				{
					mInstance.TwitterMetadataUrl = value;
				}
			}


			/// <summary>
			/// Image.
			/// </summary>
			public string Image
			{
				get
				{
					return mInstance.TwitterMetadataImage;
				}
				set
				{
					mInstance.TwitterMetadataImage = value;
				}
			}


			/// <summary>
			/// Image alt text.
			/// </summary>
			public string ImageAltText
			{
				get
				{
					return mInstance.TwitterMetadataImageAltText;
				}
				set
				{
					mInstance.TwitterMetadataImageAltText = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="TwitterMetadata" /> class.
		/// </summary>
		public TwitterMetadata() : base(CLASS_NAME)
		{
			mFields = new TwitterMetadataFields(this);
		}

		#endregion
	}
}